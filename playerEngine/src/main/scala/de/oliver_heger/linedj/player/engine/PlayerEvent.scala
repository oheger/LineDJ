/*
 * Copyright 2015-2016 The Developers Team.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package de.oliver_heger.linedj.player.engine

import java.time.LocalDateTime

/**
  * The base trait for all events generated by the audio player engine.
  *
  * Events can be used to keep track of the state of the player engine, e.g.
  * when playback of a new source starts or finishes.
  */
sealed trait PlayerEvent {
  /** The time when this event was generated. */
  val time: LocalDateTime
}

/**
  * A player event indicating the start of a new audio source.
  *
  * Events of this type are generated by the playback actor when playback of a
  * new source starts.
  *
  * @param source the audio source
  * @param time   the time when this event was generated
  */
case class AudioSourceStartedEvent(source: AudioSource,
                                   override val time: LocalDateTime = LocalDateTime.now())
  extends PlayerEvent

/**
  * A player event indicating the end of an audio source.
  *
  * Events of this type are generated by the playback actor when the end of an
  * audio source is reached.
  *
  * @param source the audio source
  * @param time   the time when this event was generated
  */
case class AudioSourceFinishedEvent(source: AudioSource,
                                    override val time: LocalDateTime = LocalDateTime.now())
  extends PlayerEvent
